services:
    kafka:
        image: apache/kafka:3.8.1
        environment:
            KAFKA_NODE_ID: 1
            KAFKA_PROCESS_ROLES: broker,controller
            KAFKA_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
            KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
            KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
            KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
            KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
            KAFKA_NUM_PARTITIONS: 3
            KAFKA_LOG_RETENTION_MS: 172800000 # 2 days
            KAFKA_LOG_CLEANUP_POLICY: compact,delete
        healthcheck:
            test: /opt/kafka/bin/kafka-broker-api-versions.sh --bootstrap-server localhost:9092 || exit 1
            interval: 2s
            start_interval: 2s
            retries: 10
        networks:
            - kafka-network

    kafka-init-topics:
        image: apache/kafka:3.8.1
        depends_on:
            kafka:
                condition: service_healthy
        environment:
            BOOTSTRAP_SERVER: kafka:9092
            TRADE_EVENTS_TOPIC_NAME: trade-events
            TRADE_EVENTS_PARTITIONS: 1
            TRADE_EVENTS_REPLICATION_FACTOR: 1
            EMA_TOPIC_NAME: ema
            EMA_PARTITIONS: 1
            EMA_REPLICATION_FACTOR: 1
            ADVISORY_TOPIC_NAME: advisory
            ADVISORY_PARTITIONS: 1
            ADVISORY_REPLICATION_FACTOR: 1
        volumes:
            - ./kafka-init-topics.sh:/kafka-init-topics.sh
        entrypoint: ["/bin/sh", "-c"]
        command: |
            /kafka-init-topics.sh
        networks:
            - kafka-network

    data_producer:
        image: data_producer
        depends_on:
            kafka-init-topics:
                condition: service_completed_successfully
        build:
            context: data_producer
            dockerfile: Dockerfile
        environment:
            SPEED_FACTOR: $SPEED_FACTOR
            CSV_PATH: /data/debs2022-gc-trading-day-12-11-21.csv
            PRINT_SENT_RECORDS: true
            TEST_STATE: true
        volumes:
            - ./data:/data
        networks:
            - kafka-network
    data_analyzer:
        image: data_analyzer
        depends_on:
            kafka-init-topics:
                condition: service_completed_successfully
        build:
            context: data_analyzer
            dockerfile: Dockerfile
        environment:
            READ_TOPIC_NAME: trade-events
            EMA_TOPIC_NAME: ema
            ADVISORY_TOPIC_NAME: advisory
        volumes:
            - ./data:/data
        networks:
            - kafka-network

    latencylogger:
        image: latency_logger
        environment:
            EMA_TOPIC_NAME: ema
            ADVISORY_TOPIC_NAME: advisory
            LOG_PATH: $LOG_PATH
        depends_on:
            kafka-init-topics:
                condition: service_completed_successfully
        build:
            context: latency_logger
            dockerfile: Dockerfile
        volumes:
            - ./logs:/logs
        networks:
            - kafka-network

    visualizer:
        image: visualizer
        environment:
            EMA_TOPIC_NAME: ema
        depends_on:
            kafka-init-topics:
                condition: service_completed_successfully
        build:
            context: visualizer
            dockerfile: Dockerfile
        ports:
            - "8888:8888"
        networks:
            - kafka-network

networks:
    kafka-network:
        driver: bridge
