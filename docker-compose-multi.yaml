services:
  controller-1:
    image: apache/kafka:3.8.1
    container_name: controller-1
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: controller
      KAFKA_LISTENERS: CONTROLLER://:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:9093,2@controller-2:9093,3@controller-3:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

  controller-2:
    image: apache/kafka:3.8.1
    container_name: controller-2
    environment:
      KAFKA_NODE_ID: 2
      KAFKA_PROCESS_ROLES: controller
      KAFKA_LISTENERS: CONTROLLER://:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:9093,2@controller-2:9093,3@controller-3:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

  controller-3:
    image: apache/kafka:3.8.1
    container_name: controller-3
    environment:
      KAFKA_NODE_ID: 3
      KAFKA_PROCESS_ROLES: controller
      KAFKA_LISTENERS: CONTROLLER://:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:9093,2@controller-2:9093,3@controller-3:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

  broker-1:
    image: apache/kafka:3.8.1
    container_name: broker-1
    ports:
      - 29092:9092
    environment:
      KAFKA_NODE_ID: 4
      KAFKA_PROCESS_ROLES: broker
      KAFKA_LISTENERS: 'PLAINTEXT://:19092,PLAINTEXT_HOST://:9092'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker-1:19092,PLAINTEXT_HOST://localhost:29092'
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:9093,2@controller-2:9093,3@controller-3:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    depends_on:
      - controller-1
      - controller-2
      - controller-3
    healthcheck:
      test: /opt/kafka/bin/kafka-broker-api-versions.sh --bootstrap-server localhost:9092 || exit 1
      interval: 2s
      start_interval: 2s
      retries: 10
  broker-2:
    image: apache/kafka:3.8.1
    container_name: broker-2
    ports:
      - 39092:9092
    environment:
      KAFKA_NODE_ID: 5
      KAFKA_PROCESS_ROLES: broker
      KAFKA_LISTENERS: 'PLAINTEXT://:19092,PLAINTEXT_HOST://:9092'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker-2:19092,PLAINTEXT_HOST://localhost:39092'
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:9093,2@controller-2:9093,3@controller-3:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    depends_on:
      - controller-1
      - controller-2
      - controller-3
    healthcheck:
      test: /opt/kafka/bin/kafka-broker-api-versions.sh --bootstrap-server localhost:9092 || exit 1
      interval: 2s
      start_interval: 2s
      retries: 10
  broker-3:
    image: apache/kafka:3.8.1
    container_name: broker-3
    ports:
      - 49092:9092
    environment:
      KAFKA_NODE_ID: 6
      KAFKA_PROCESS_ROLES: broker
      KAFKA_LISTENERS: 'PLAINTEXT://:19092,PLAINTEXT_HOST://:9092'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker-3:19092,PLAINTEXT_HOST://localhost:49092'
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:9093,2@controller-2:9093,3@controller-3:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    depends_on:
      - controller-1
      - controller-2
      - controller-3
    healthcheck:
      test: /opt/kafka/bin/kafka-broker-api-versions.sh --bootstrap-server localhost:9092 || exit 1
      interval: 2s
      start_interval: 2s
      retries: 10

  kafka-init-topics:
    image: apache/kafka:3.8.1
    depends_on:
        broker-1:
            condition: service_healthy
        broker-2:
            condition: service_healthy
        broker-3:
            condition: service_healthy
    environment:
        BOOTSTRAP_SERVER: broker-1:19092,broker-2:19092,broker-3:19092
        TRADE_EVENTS_TOPIC_NAME: trade-events
        TRADE_EVENTS_PARTITIONS: 5
        TRADE_EVENTS_REPLICATION_FACTOR: 2

        EMA_TOPIC_NAME: ema
        EMA_PARTITIONS: 2
        EMA_REPLICATION_FACTOR: 2
        ADVISORY_TOPIC_NAME: advisory
        ADVISORY_PARTITIONS: 3
        ADVISORY_REPLICATION_FACTOR: 2

    volumes:
        - ./kafka-init-topics.sh:/kafka-init-topics.sh
    entrypoint: ["/bin/sh", "-c"]
    command: |
        /kafka-init-topics.sh
  data_producer:
    image: data_producer
    depends_on:
        kafka-init-topics:
            condition: service_completed_successfully
    build:
        context: data_producer
        dockerfile: Dockerfile
    environment:
        SPEED_FACTOR: $SPEED_FACTOR
        CSV_PATH: /data/debs2022-gc-trading-day-12-11-21.csv
        PRINT_SENT_RECORDS: true
        TEST_STATE: false
        KAFKA_SERVER: broker-1:19092,broker-2:19092,broker-3:19092
        WINDOW_TIME: 5
        GRACE_TIME: 1
    volumes:
        - ./data:/data

  data_analyzer-1:
    image: data_analyzer
    depends_on:
        kafka-init-topics:
            condition: service_completed_successfully
    build:
        context: data_analyzer
        dockerfile: Dockerfile
    environment:
        READ_TOPIC_NAME: trade-events
        EMA_TOPIC_NAME: ema
        ADVISORY_TOPIC_NAME: advisory
        KAFKA_SERVER: broker-1:19092,broker-2:19092,broker-3:19092

  data_analyzer-2:
    image: data_analyzer
    depends_on:
        kafka-init-topics:
            condition: service_completed_successfully
    build:
        context: data_analyzer
        dockerfile: Dockerfile
    environment:
        READ_TOPIC_NAME: trade-events
        EMA_TOPIC_NAME: ema
        ADVISORY_TOPIC_NAME: advisory
        KAFKA_SERVER: broker-1:19092,broker-2:19092,broker-3:19092

  latencylogger:
    image: latency_logger
    environment:
        EMA_TOPIC_NAME: ema
        ADVISORY_TOPIC_NAME: advisory
        LOG_PATH: $LOG_PATH
        KAFKA_SERVER: broker-1:19092,broker-2:19092,broker-3:19092
    depends_on:
        kafka-init-topics:
            condition: service_completed_successfully
    build:
        context: latency_logger
        dockerfile: Dockerfile
    volumes:
        - ./logs:/logs

  visualizer:
    image: visualizer
    environment:
        EMA_TOPIC_NAME: ema
    depends_on:
        kafka-init-topics:
            condition: service_completed_successfully
    build:
        context: visualizer
        dockerfile: Dockerfile
    ports:
        - "8888:8888"
